"properties" : {
"content" : "\n<configuration scan=\"true\" scanPeriod=\"30 seconds\">\n <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n <resetJUL>true</resetJUL>\n </contextListener>\n \n <appender name=\"APP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n <file>{{nifi_log_dir}}/nifi-app.log</file>\n <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n <!--\n For daily rollover, use 'app_%d.log'.\n For hourly rollover, use 'app_%d{yyyy-MM-dd_HH}.log'.\n To GZIP rolled files, replace '.log' with '.log.gz'.\n To ZIP rolled files, replace '.log' with '.log.zip'.\n -->\n <fileNamePattern>{{nifi_log_dir}}/nifi-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>\n <timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\">\n <maxFileSize>100MB</maxFileSize>\n </timeBasedFileNamingAndTriggeringPolicy>\n <!-- keep 30 log files worth of history -->\n <maxHistory>30</maxHistory>\n </rollingPolicy>\n <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n <immediateFlush>true</immediateFlush>\n </encoder>\n </appender>\n \n <appender name=\"USER_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n <file>{{nifi_log_dir}}/nifi-user.log</file>\n <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n <!--\n For daily rollover, use 'user_%d.log'.\n For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n To GZIP rolled files, replace '.log' with '.log.gz'.\n To ZIP rolled files, replace '.log' with '.log.zip'.\n -->\n <fileNamePattern>{{nifi_log_dir}}/nifi-user_%d.log</fileNamePattern>\n <!-- keep 30 log files worth of history -->\n <maxHistory>30</maxHistory>\n </rollingPolicy>\n <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n </encoder>\n </appender>\n\n <appender name=\"BOOTSTRAP_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n <file>{{nifi_log_dir}}/nifi-bootstrap.log</file>\n <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n <!--\n For daily rollover, use 'user_%d.log'.\n For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.\n To GZIP rolled files, replace '.log' with '.log.gz'.\n To ZIP rolled files, replace '.log' with '.log.zip'.\n -->\n <fileNamePattern>{{nifi_log_dir}}/nifi-bootstrap_%d.log</fileNamePattern>\n <!-- keep 5 log files worth of history -->\n <maxHistory>5</maxHistory>\n </rollingPolicy>\n <encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n </encoder>\n </appender>\n\t\n\t<appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n\t\t<encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\">\n <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>\n </encoder>\n\t</appender>\n \n <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->\n \n <logger name=\"org.apache.nifi\" level=\"INFO\"/>\n <logger name=\"org.apache.nifi.controller.repository.StandardProcessSession\" level=\"WARN\" />\n \n <!-- Logger for managing logging statements for nifi clusters. -->\n <logger name=\"org.apache.nifi.cluster\" level=\"INFO\"/>\n\n <!-- Logger for logging HTTP requests received by the web server. -->\n <logger name=\"org.apache.nifi.server.JettyServer\" level=\"INFO\"/>\n\n <!-- Logger for managing logging statements for jetty -->\n <logger name=\"org.eclipse.jetty\" level=\"INFO\"/>\n\n <!-- Suppress non-error messages due to excessive logging by class or library -->\n <logger name=\"com.sun.jersey.spi.container.servlet.WebComponent\" level=\"ERROR\"/>\n <logger name=\"com.sun.jersey.spi.spring\" level=\"ERROR\"/>\n <logger name=\"org.springframework\" level=\"ERROR\"/>\n \n <!-- Suppress non-error messages due to known warning about redundant path annotation (NIFI-574) -->\n <logger name=\"com.sun.jersey.spi.inject.Errors\" level=\"ERROR\"/>\n\n <!--\n Logger for capturing user events. We do not want to propagate these\n log events to the root logger. These messages are only sent to the\n user-log appender.\n -->\n <logger name=\"org.apache.nifi.web.security\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"USER_FILE\"/>\n </logger>\n <logger name=\"org.apache.nifi.web.api.config\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"USER_FILE\"/>\n </logger>\n <logger name=\"org.apache.nifi.authorization\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"USER_FILE\"/>\n </logger>\n <logger name=\"org.apache.nifi.cluster.authorization\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"USER_FILE\"/>\n </logger>\n <logger name=\"org.apache.nifi.web.filter.RequestLogger\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"USER_FILE\"/>\n </logger>\n\n\n <!--\n Logger for capturing Bootstrap logs and NiFi's standard error and standard out. \n -->\n <logger name=\"org.apache.nifi.bootstrap\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"BOOTSTRAP_FILE\" />\n </logger>\n <logger name=\"org.apache.nifi.bootstrap.Command\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"CONSOLE\" />\n <appender-ref ref=\"BOOTSTRAP_FILE\" />\n </logger>\n\n <!-- Everything written to NiFi's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->\n <logger name=\"org.apache.nifi.StdOut\" level=\"INFO\" additivity=\"false\">\n <appender-ref ref=\"BOOTSTRAP_FILE\" />\n </logger>\n \n <!-- Everything written to NiFi's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->\n\t<logger name=\"org.apache.nifi.StdErr\" level=\"ERROR\" additivity=\"false\">\n \t<appender-ref ref=\"BOOTSTRAP_FILE\" />\n </logger>\n\n\n <root level=\"INFO\">\n <appender-ref ref=\"APP_FILE\"/>\n </root>\n \n</configuration>"
}
